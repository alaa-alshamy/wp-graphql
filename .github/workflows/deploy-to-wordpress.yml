name: Deploy to WordPress.org

on:
  release:
    types: [published]
  push:
    branches:
      - master
      - "1.x/master"  # For maintenance releases
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true
        default: 'latest'

jobs:
  version:
    name: Version and Release
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, 'ci skip')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Branch
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [[ "$BRANCH" != "master" && "$BRANCH" != "1.x/master" ]]; then
            echo "Error: Releases can only be created from master or 1.x/master"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          version: npm run version
          publish: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy to WordPress.org
    needs: [version]
    if: needs.version.outputs.published == 'true' || github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Validate Version Numbers
        run: |
          # Check version consistency
          PHP_VERSION=$(grep "Version:" wp-graphql.php | cut -d' ' -f2)
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          CONSTANTS_VERSION=$(grep "WPGRAPHQL_VERSION" constants.php | cut -d"'" -f4)

          if [ "$PHP_VERSION" != "$PACKAGE_VERSION" ] || [ "$PHP_VERSION" != "$CONSTANTS_VERSION" ]; then
            echo "Error: Version numbers do not match across files"
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl
          tools: composer

      - name: Install Subversion
        run: sudo apt-get update && sudo apt-get install -y subversion

      - name: Install PHP dependencies
        run: |
          composer install --no-dev --optimize-autoloader

      - name: WordPress Plugin Deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SLUG: wp-graphql

      - name: Ensure correct directory structure
        run: |
          mkdir -p /home/runner/svn-wp-graphql/tags

      - name: Create Artifact
        run: |
          composer run-script zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wp-graphql
          path: plugin-build/wp-graphql.zip

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: plugin-build/wp-graphql.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
