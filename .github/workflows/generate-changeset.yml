name: "Generate Changeset"

# Triggered when a PR is merged or manually
on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      PR_TITLE:
        description: "Title of the PR"
        required: true
        default: "feat: No title"
      PR_BODY:
        description: "Body of the PR"
        required: true
        default: "No body"
      PR_NUMBER:
        description: "Number of the PR"
        required: true
        default: "0"

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-changeset:
    # Only run if PR was merged (not just closed) or manually triggered
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    name: Generate Changeset
    runs-on: ubuntu-latest
    env:
      PR_TITLE: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.PR_TITLE || github.event.pull_request.title }}
      PR_BODY: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.PR_BODY || github.event.pull_request.body }}
      PR_NUMBER: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.PR_NUMBER || github.event.pull_request.number }}
      GH_TOKEN: ${{ secrets.SYNC_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_dispatch' && 'develop' || github.event.pull_request.base.ref }}
          token: ${{ secrets.SYNC_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      # Scan for @since tags with improved error handling
      - name: Scan for @since Tags
        id: since_tags
        run: |
          # Run the script and capture both output and exit code
          OUTPUT=$(node -e "
            try {
              const { generateSinceTagsMetadata } = require('./scripts/scan-since-tags');
              generateSinceTagsMetadata().then(result => {
                console.log(JSON.stringify(result || {}));
              }).catch(err => {
                console.error('Error in generateSinceTagsMetadata:', err);
                console.log('{}');
              });
            } catch (err) {
              console.error('Error requiring or executing script:', err);
              console.log('{}');
            }
          " 2>&1) || true

          # Check if output is valid JSON
          if echo "$OUTPUT" | jq empty 2>/dev/null; then
            echo "tags=$OUTPUT" >> $GITHUB_OUTPUT
          else
            echo "Error in since tags script: $OUTPUT"
            echo "tags={}" >> $GITHUB_OUTPUT
          fi

      # Generate changeset
      - name: Generate Changeset
        id: generate
        run: |
          # Run with error handling
          if ! node scripts/generate-changeset.js; then
            echo "Error generating changeset"
            exit 1
          fi

          # Check if any changesets were created
          if [ -z "$(ls -A .changeset/*.md 2>/dev/null)" ]; then
            echo "No changesets were generated. Creating a minimal one."

            # Create a minimal changeset if none exists
            mkdir -p .changeset

            # Use echo commands instead of heredoc
            echo '---' > .changeset/minimal-changeset.md
            echo '"wp-graphql": patch' >> .changeset/minimal-changeset.md
            echo '---' >> .changeset/minimal-changeset.md
            echo '' >> .changeset/minimal-changeset.md
            echo "PR #$PR_NUMBER: $PR_TITLE" >> .changeset/minimal-changeset.md
          fi

      # Set Git config
      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      # Install GitHub CLI
      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || apt-get install curl -y
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && apt-get update \
          && apt-get install gh -y

      # Create a new branch and PR instead of pushing directly to develop
      - name: Create changeset branch and PR
        run: |
          # Create a new branch
          BRANCH_NAME="changeset-pr-$PR_NUMBER"
          git checkout -b $BRANCH_NAME

          # Add and commit changes
          git add .changeset/*
          git commit -m "chore: add changeset for PR #$PR_NUMBER"

          # Push to the new branch
          git push origin $BRANCH_NAME

          # GitHub CLI uses GH_TOKEN environment variable by default
          # Create PR using GitHub CLI
          gh pr create \
            --base develop \
            --head $BRANCH_NAME \
            --title "Changeset for PR #$PR_NUMBER" \
            --body "Automatically generated changeset for PR #$PR_NUMBER. This PR contains version bump information and changelog entries." \
            --label "changeset"
